{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c6b590d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport \"./MatchDetailCard.scss\";\n\nexport const MatchDetailCard = ({teamName, match}) => {\n    if(!match) return null;\n    const otherTeam = match.team1 === teamName ?match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n    return(\n        <div className={isMatchWon ? `MatchDetailCard won-card` : `MatchDetailCard lost-card`}>\n            <div>\n          {/* <h4> {match.team1} vs {match.team2}</h4> */}\n          <span className=\"vs\">vs</span>\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n        <h2 className=\"match-date\">{match.date}</h2>\n        <h3 className=\"match-venue\">at {match.venue}</h3>\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n        </div>\n        <div className=\"additional-detail\">\n         <h3>First Innings</h3>\n         <p>{match.team1}</p>\n         <h3>Second Innnings</h3>\n         <p>{match.team2}</p>\n         <h3>Man of the match</h3>\n         <p>{match.playerOfMatch}</p>\n         <h3>Umpires</h3>\n         <p>{match.umpire1},{match.umpire2}</p>\n         </div>\n        </div>\n    );\n}","import { React } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './MatchSmallCard.scss'\nexport const MatchSmallCard = ({teamName,match}) => {\n  if(!match) return null;\n  const otherTeam = match.team1 === teamName ?match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeam}`;\n  const isMatchWon = teamName === match.matchWinner;\n    return(\n      <div className={isMatchWon ? `MatchSmallCard won-card` : `MatchSmallCard lost-card`}>\n        <span className=\"vs\">vs</span>\n          <h3><Link to={otherTeamRoute}>{otherTeam }</Link></h3>\n          {/* <p>{matches.team1} vs {matches.team2}</p> */}\n          <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n        </div>\n    );\n}","import  {React, useEffect, useState } from 'react';\nimport {useParams, Link } from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nimport './TeamPage.scss';\n\nexport const TeamPage = () => {\n\n    // const [team, setTeam] = useState({});\n    const[team,setTeam] = useState({matches :[]});\n    // Here team is a state , setTeam is a way to populate it\n    const{teamName} = useParams();\n    \n    // Here, When the component loads with the empty array\n    useEffect(\n        () => {\n            const fetchMatches = async () =>{\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n                const data = await response.json();\n                console.log(data);\n                setTeam(data);\n            };\n            fetchMatches();\n\n        }, [teamName]\n    );\n    if(!team || !team.teamName){\n        return <h1> Team not found</h1>\n    }\n    return(\n        <div className = \"TeamPage\">\n           <div className=\"team-name-section\">\n               <h1 className=\"team-name\"> {team.teamName} </h1> \n            </div> \n           <div className=\"win-loss-section\">\n               Wins / Losses\n               <PieChart\n            data={[\n                { title: 'Losses', value: team.totalMatches-team.totalWins, color: '#a34d5d' },\n                 { title: 'Wins', value: team.totalWins, color: '#4da375' },\n             ]}\n                      />\n            </div>\n           <div className=\"match-detail-section\">\n           < h3> Latest Matches</h3>\n            <MatchDetailCard teamName= {team.teamName} match={team.matches[0]}/>\n            </div>\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName= {team.teamName} match={match} />)}\n            {/* {team.matches && team.matches.map(match =>(<MatchSmallCard match = {match} />))} */}\n                   <div className=\"more-link\">\n                       <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More {'>'} </Link>\n                   </div>\n                 </div>\n                 \n    );\n}","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n import './YearSelector.scss'\nexport const YearSelector = ({teamName}) =>{\n    let years = [];\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n    for(let i = startYear; i<= endYear; i++){\n        years.push(i);\n    }\n        return(\n            <ol className=\"YearSelector\">\n                {years.map(year =>(\n                    <li key={year}>\n                        <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n                    </li>\n                ))\n            }\n            </ol>\n        )\n   \n}","import  {React, useEffect, useState } from 'react';\nimport {useParams} from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { YearSelector } from '../components/YearSelector';\n\nimport './MatchPage.scss';\n\nexport const MatchPage = () => {\n\n    const [matches,setMatches] = useState([]);\n    const {teamName, year} = useParams();\n    // const teamName = 'Chennai Super Kings';\n    useEffect(\n        () => {\n            const fetchMatches = async () =>{\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n                const data = await response.json();\n                console.log(data);\n                setMatches(data);\n            };\n            fetchMatches();\n\n        }, [teamName, year]\n    );\n\n    return(\n        <div className = \"MatchPage\">\n            <div className=\"year-selector\">\n                <h3>Select Year</h3>\n                <YearSelector teamName={teamName} />\n            </div>\n            <div>\n            <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n            {\n                matches.map(match => <MatchDetailCard key={match.id} teamName= {teamName} match={match} />)\n            }\n            </div>\n        </div>\n    );\n} ","import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TeamTile.scss';\nexport const TeamTile = ({teamName}) => {\n    return(\n        <div className=\"TeamTile\">\n            <h1>\n                <Link to ={`/teams/${teamName}`}>\n                    {teamName}\n                </Link>\n                </h1>\n        </div>\n    )\n}","import  {React, useEffect, useState } from 'react';\n\nimport { TeamTile } from '../components/TeamTile';\n\nimport './HomePage.scss'; \n\nexport const HomePage = () => {\n\n    const[teams,setTeams] = useState([]);\n    \n    useEffect(\n        () => {\n            const fetchAllTeams = async () =>{\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n                const data = await response.json();\n                setTeams(data);\n            };\n            fetchAllTeams();\n\n        }, []\n    );\n    \n    return(\n        <div className = \"HomePage\">\n           <div className=\"Header-section\">\n               <h1 className=\"app-name\">IPL Dashboard</h1> \n            </div> \n           <div className=\"team-grid\">\n                 { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n           </div>\n        </div>   \n    );\n}","import './App.scss';\nimport {HashRouter as Router, Route,Switch} from 'react-router-dom'\nimport { TeamPage } from './pages/TeamPage';\nimport {MatchPage} from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n        <Route path =\"/teams/:teamName/matches/:year\">\n          <MatchPage />\n        </Route>\n        <Route path=\"/teams/:teamName\">\n        <TeamPage />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n        </Route> \n        </Switch>\n      </Router>\n   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}